It looks like you might be looking for a Java program to calculate the XTX (X transpose X) and XTY (X transpose Y) matrices, which are commonly used in linear regression. This program defines methods for matrix transpose and multiplication, then uses them to calculate XTX and XTY. You can modify the X and Y matrices to fit your specific data.

  import java.util.Arrays;

public class MatrixOperations {

    public static double[][] transpose(double[][] matrix) {
        int rows = matrix.length;
        int cols = matrix[0].length;

        double[][] result = new double[cols][rows];
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                result[j][i] = matrix[i][j];
            }
        }
        return result;
    }

    public static double[][] multiply(double[][] a, double[][] b) {
        int rowsA = a.length;
        int colsA = a[0].length;
        int colsB = b[0].length;

        double[][] result = new double[rowsA][colsB];
        for (int i = 0; i < rowsA; i++) {
            for (int j = 0; j < colsB; j++) {
                for (int k = 0; k < colsA; k++) {
                    result[i][j] += a[i][k] * b[k][j];
                }
            }
        }
        return result;
    }

    public static void main(String[] args) {
        double[][] X = {{1, 2}, {3, 4}, {5, 6}};
        double[][] Y = {{7}, {8}, {9}};

        double[][] XTX = multiply(transpose(X), X);
        double[][] XTY = multiply(transpose(X), Y);

        System.out.println("XTX:");
        for (double[] row : XTX) {
            System.out.println(Arrays.toString(row));
        }

        System.out.println("\nXTY:");
        for (double[] row : XTY) {
            System.out.println(Arrays.toString(row));
        }
    }
}
